// <auto-generated />
using System;
using Avondspel.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Avondspel.Infrastructure.Migrations
{
    [DbContext(typeof(AvondspelDbContext))]
    [Migration("20221028104519_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Avondspel.Domain.Bordspel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AchtienPlus")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GebruikerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("genre")
                        .HasColumnType("int");

                    b.Property<int>("soortSpel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bordspellen");
                });

            modelBuilder.Entity("Avondspel.Domain.BordspellenAvond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AantalSpelers")
                        .HasColumnType("int");

                    b.Property<bool>("AchtienPlus")
                        .HasColumnType("bit");

                    b.Property<string>("GebruikerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Huisnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Planning")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PotLuck")
                        .HasColumnType("bit");

                    b.Property<string>("Stad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BordspellenAvond");
                });

            modelBuilder.Entity("Avondspel.Domain.BordspellenLijst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BordspelId")
                        .HasColumnType("int");

                    b.Property<string>("GebruikerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpelAvondId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BordspellenLijst");
                });

            modelBuilder.Entity("Avondspel.Domain.Eten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Alcohol")
                        .HasColumnType("bit");

                    b.Property<bool>("Lactose")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Notenallergie")
                        .HasColumnType("bit");

                    b.Property<bool>("Vega")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Eten");
                });

            modelBuilder.Entity("Avondspel.Domain.Gebruiker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Alcohol")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Lactose")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Notenallergie")
                        .HasColumnType("bit");

                    b.Property<bool>("OuderDanAchtien")
                        .HasColumnType("bit");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vega")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Gebruiker");
                });

            modelBuilder.Entity("BordspellenAvondEten", b =>
                {
                    b.Property<int>("BordspellenAvondenId")
                        .HasColumnType("int");

                    b.Property<int>("EtenLijstId")
                        .HasColumnType("int");

                    b.HasKey("BordspellenAvondenId", "EtenLijstId");

                    b.HasIndex("EtenLijstId");

                    b.ToTable("BordspellenAvondEten");
                });

            modelBuilder.Entity("BordspellenAvondGebruiker", b =>
                {
                    b.Property<int>("BordspellenAvondenId")
                        .HasColumnType("int");

                    b.Property<int>("GebruikersId")
                        .HasColumnType("int");

                    b.HasKey("BordspellenAvondenId", "GebruikersId");

                    b.HasIndex("GebruikersId");

                    b.ToTable("BordspellenAvondGebruiker");
                });

            modelBuilder.Entity("BordspellenAvondEten", b =>
                {
                    b.HasOne("Avondspel.Domain.BordspellenAvond", null)
                        .WithMany()
                        .HasForeignKey("BordspellenAvondenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avondspel.Domain.Eten", null)
                        .WithMany()
                        .HasForeignKey("EtenLijstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BordspellenAvondGebruiker", b =>
                {
                    b.HasOne("Avondspel.Domain.BordspellenAvond", null)
                        .WithMany()
                        .HasForeignKey("BordspellenAvondenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avondspel.Domain.Gebruiker", null)
                        .WithMany()
                        .HasForeignKey("GebruikersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
